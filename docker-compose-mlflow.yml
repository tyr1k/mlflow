version: '3.8'

services:
  mlflow:
    image: mlflow:v2.0.1
    command: mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri postgresql://${login}:${pass}@mlflow-postgres:5432/mlflow
    ports:
      - "5000:5000"
    depends_on:
      - mlflow-postgres
      - minio
    networks:
      - mlflow-network
    environment:

    healthcheck:
      test: ["CMD-SHELL", "python -c \"import requests; response = requests.get('http://localhost:5000'); exit(0) if response.status_code == 200 else exit(1)\""]
      interval: 10s
      timeout: 5s
      retries: 3

  mlflow-postgres:
    image: postgres:16.2-alpine3.19
    environment:
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - "/storage/mlflow_db/:/var/lib/postgresql/data"
    networks:
      - mlflow-network
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3
  minio:
    image: minio/minio:RELEASE.2023-10-24T04-42-36Z.fips
    command: server --console-address ":9001" /data/
    ports:
      - "9990:9000"
      - "9991:9001"
    environment:
      MINIO_ROOT_USER: test
      MINIO_ROOT_PASSWORD: test_pass
    volumes:
      - /storage/mlflow_minio/:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
     - mlflow-network 
networks:
  mlflow-network:
